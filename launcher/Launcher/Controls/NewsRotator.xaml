<UserControl x:Class="WowSuite.Launcher.Controls.NewsRotator"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             x:Name="NewsControl"
             MouseLeftButtonDown="NewsControl_MouseLeftButtonDown"
             d:DesignHeight="263"
             d:DesignWidth="477"
             mc:Ignorable="d">

    <UserControl.Resources>

        <Storyboard x:Key="HoverEffectEnter">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot"
                                        Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3"
                                  Value="10" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="leftButton"
                                        Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3"
                                  Value="1" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rightButton"
                                        Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3"
                                  Value="1" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="HoverEffectLeave">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot"
                                        Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3"
                                  Value="0.8" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="leftButton"
                                        Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3"
                                  Value="0.5" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rightButton"
                                        Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3"
                                  Value="0.5" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="ChangeItems"
                  AutoReverse="True">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot"
                                        Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                  Value="0" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <!--  AA008BCB  -->

        <Color x:Key="DefaultButton.Color">
            #D8000000
        </Color>
        <Color x:Key="HoverButton.Color">
            #009FE9
        </Color>
        <Color x:Key="PressedButton.Color">
            #008BCB
        </Color>
        <SolidColorBrush x:Key="HoverButton.Brush"
                       Color="{StaticResource HoverButton.Color}" />
        <SolidColorBrush x:Key="DefaultButton.Brush"
                       Color="{StaticResource DefaultButton.Color}" />
        <SolidColorBrush x:Key="PressedButton.Brush"
                       Color="{StaticResource PressedButton.Color}" />

        <Style x:Key="ChooseLeftButton"
             BasedOn="{x:Null}"
             TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="#FFFFFFFF" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="MouseHover">
                                <ColorAnimation Duration="0:0:0.1"
                                        Storyboard.TargetName="Border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="{StaticResource HoverButton.Color}" />
                            </Storyboard>
                            <Storyboard x:Key="MouseLeave">
                                <ColorAnimation Duration="0:0:0.1"
                                        Storyboard.TargetName="Border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="{StaticResource DefaultButton.Color}" />
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="Grid"
                        Margin="0,0,0,0"
                        Opacity="1">
                            <Border x:Name="Border"
                             Margin="0,2,0,0"
                             HorizontalAlignment="Stretch"
                             VerticalAlignment="Stretch"
                             Background="{StaticResource DefaultButton.Brush}"
                             BorderThickness="{TemplateBinding BorderThickness}"
                             CornerRadius="4,0,0,4"
                             Padding="{TemplateBinding Padding}" />
                            <ContentPresenter x:Name="ContentText"
                                       Margin="2"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       RecognizesAccessKey="True" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource HoverButton.Brush}" />
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseHover}" />
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseLeave}" />
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedButton.Brush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Grid" Property="Opacity" Value="0.20" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ChooseRightButton"
             BasedOn="{x:Null}"
             TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="#FFFFFFFF" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="MouseHover">
                                <ColorAnimation Duration="0:0:0.1"
                                        Storyboard.TargetName="Border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="{StaticResource HoverButton.Color}" />
                            </Storyboard>
                            <Storyboard x:Key="MouseLeave">
                                <ColorAnimation Duration="0:0:0.1"
                                        Storyboard.TargetName="Border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="{StaticResource DefaultButton.Color}" />
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="Grid"
                        Margin="0,0,0,0"
                        Opacity="1">
                            <Border x:Name="Border"
                             Margin="0,2,0,0"
                             HorizontalAlignment="Stretch"
                             VerticalAlignment="Stretch"
                             Background="{StaticResource DefaultButton.Brush}"
                             BorderThickness="{TemplateBinding BorderThickness}"
                             CornerRadius="0,4,4,0"
                             Padding="{TemplateBinding Padding}" />
                            <ContentPresenter x:Name="ContentText"
                                       Margin="2"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       RecognizesAccessKey="True" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource HoverButton.Brush}" />
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseHover}" />
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseLeave}" />
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedButton.Brush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Grid" Property="Opacity" Value="0.20" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>
    <UserControl.OpacityMask>
        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Offset="0" Color="White" />
            <GradientStop Offset="1" Color="Black" />
            <GradientStop Offset="0.881" Color="White" />
        </LinearGradientBrush>
    </UserControl.OpacityMask>

    <UserControl.Triggers>
        <EventTrigger RoutedEvent="UIElement.MouseEnter">
            <BeginStoryboard Storyboard="{StaticResource HoverEffectEnter}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseLeave">
            <BeginStoryboard Storyboard="{StaticResource HoverEffectLeave}" />
        </EventTrigger>
    </UserControl.Triggers>

    <Grid x:Name="LayoutRoot"
         DataContext="{Binding Mode=OneWay,
                               RelativeSource={RelativeSource FindAncestor,
                                                              AncestorType={x:Type UserControl}}}"
         Opacity="0.8" Margin="-121,0,0,0">

        <Grid x:Name="mainGrid" Margin="-13,0,0,0">
            <!--<Image x:Name="defaultNewsImage"
                Source="pack://application:,,,/Resources/1.jpg" />-->
            <!--<Image x:Name="newsImage"
                Source="{Binding CurrentNewsItem.ImageLink}" />-->




            <StackPanel Margin="123,0,0,0"
                     VerticalAlignment="Bottom" Height="263">
                <TextBlock x:Name="newsHead"
            		FontFamily="Vendara"
            		FontSize="30"
            		Foreground="{Binding Foreground, ElementName=NewsControl}"
            		Padding="20,0"
            		Text="{Binding CurrentNewsItem.Title}"
            		TextWrapping="Wrap" Height="49" VerticalAlignment="Center" Margin="91,0,0,0" />
                <TextBlock x:Name="newsBody"
            		FontFamily="Vendara"
            		FontSize="14"
            		Foreground="{Binding Foreground, ElementName=NewsControl}"
            		Padding="10,0"
            		Text="{Binding CurrentNewsItem.Text}"
            		TextWrapping="Wrap" Height="209" HorizontalAlignment="Right" Width="475" />
            </StackPanel>

        </Grid>




        <Button x:Name="rightButton"
            	BorderThickness="0"
            	Click="NextNewsItem"
            	ClipToBounds="True"
            	Content="&gt;"
            	Cursor="Hand"
            	Focusable="False"
            	FontFamily="Consolas"
            	FontSize="21"
            	IsHitTestVisible="True"
            	IsTabStop="False"
            	RenderTransformOrigin="1,1"
            	Style="{DynamicResource ChooseRightButton}" Height="60" VerticalAlignment="Bottom" Margin="70,-59,506,262" >
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="-90"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Button x:Name="leftButton"
            	Width="26"
            	BorderThickness="0"
            	Click="PreviousNewsItem"
            	ClipToBounds="True"
            	Content="&lt;"
            	Cursor="Hand"
            	Focusable="False"
            	FontFamily="Consolas"
            	FontSize="21"
            	IsHitTestVisible="True"
            	IsTabStop="False"
            	RenderTransformOrigin="1,1"
            	Style="{DynamicResource ChooseLeftButton}" Height="60" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="69,-28,503,0" >
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="270"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>






    </Grid>

</UserControl>
